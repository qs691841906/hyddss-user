<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosoft.ddss.dao.LoggingEventMapper">
  <resultMap id="BaseResultMap" type="com.sinosoft.ddss.common.entity.LoggingEvent">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="event_id" property="eventId" />
    <result column="timestmp" property="timestmp" />
    <result column="formatted_message" property="formattedMessage" />
    <result column="logger_name" property="loggerName" />
    <result column="level_string" property="levelString" />
    <result column="thread_name" property="threadName" />
    <result column="reference_flag" property="referenceFlag" />
    <result column="arg0" property="arg0" />
    <result column="arg1" property="arg1" />
    <result column="arg2" property="arg2" />
    <result column="arg3" property="arg3" />
    <result column="caller_filename" property="callerFilename" />
    <result column="caller_class" property="callerClass" />
    <result column="caller_method" property="callerMethod" />
    <result column="caller_line" property="callerLine" />
  </resultMap>
  <sql id="Base_Column_List">
    event_id, to_char(to_timestamp(timestmp / 1000), 'yyyy/MM/dd HH24:mi:ss') createTime, formatted_message, logger_name, level_string, thread_name, reference_flag, 
    arg0, arg1, arg2, arg3, caller_filename, caller_class, caller_method, caller_line
  </sql>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from logging_event
    where event_id = #{eventId,jdbcType=BIGINT}
  </delete>
  
  <select id="listLog" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.query.SysLogQuery">
		select
		<include refid="Base_Column_List" />
		from logging_event
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		    <if test="levelString != null and levelString != ''">
				AND level_string = #{levelString}
			</if>
			<if test="startLong != null and startLong != ''">
			AND #{startLong} &lt;=
			timestmp
			</if>
			<if test="endLong != null and endLong != ''">
				AND #{endLong} &gt;=
				timestmp
			</if>
	    </trim>
	    	<choose>
				<when test="sortBy != null and sortBy != ''">
					<if test="sortType == 1">
						ORDER BY event_id ASC
					</if>
					<if test="sortType != 2">
						ORDER BY event_id DESC
					</if>
				</when>
				<otherwise>
					ORDER BY event_id DESC
				</otherwise>
			</choose>
	    <if	test="startNum != null and startNum >= 0 and pageSize != null and pageSize > 0">
			<![CDATA[ limit #{pageSize} offset #{startNum} ]]> 
		</if>
  </select>
  
  <select id="countLog" parameterType="com.sinosoft.ddss.common.entity.query.SysLogQuery" resultType="java.lang.Integer">
  	 select 
    count(1)
    from logging_event
    <trim prefix="WHERE" prefixOverrides="AND | OR">
   		<if test="levelString != null and levelString != ''">
			AND level_string = #{levelString}
		</if>
		<if test="startLong != null and startLong != ''">
			AND #{startLong} &lt;=
			timestmp
			</if>
			<if test="endLong != null and endLong != ''">
				AND #{endLong} &gt;=
				timestmp
			</if>
    </trim>
  </select>
  <select id="listLogByIds" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.SysLog">
	SELECT
	<include refid="Base_Column_List"/>
	FROM
	logging_event
	WHERE
	event_id IN (${ids})
  </select>
</mapper>