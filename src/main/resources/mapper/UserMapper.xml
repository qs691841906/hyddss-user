<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosoft.ddss.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.sinosoft.ddss.common.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id"  property="userId" />
    <result column="user_name"  property="userName" />
    <result column="real_name"  property="realName" />
    <result column="user_pwd"  property="userPwd" />
    <result column="user_sex"  property="userSex" />
    <result column="user_email"  property="userEmail" />
    <result column="user_mobile"  property="userMobile" />
    <result column="work_area"  property="workArea" />
    <result column="work_type" property="workType" />
    <result column="work_unit"  property="workUnit" />
    <result column="work_tel" property="workTel" />
    <result column="id_card" property="idCard" />
    <result column="application_area" property="applicationArea" />
    <result column="address" property="address" />
    <result column="fax" property="fax" />
    <result column="country" property="country" />
    <result column="province"  property="province" />
    <result column="city" property="city" />
    <result column="status" property="status" />
    <result column="audit_status"  property="auditStatus" />
    <result column="audit_fail_reason" property="auditFailReason" />
    <result column="source"  property="source" />
    <result column="founder" property="founder" />
    <result column="create_time" property="createTime" />
    <result column="role_id" property="roleId" />
    <result column="is_report" property="isReport" />
    <result column="is_userline" property="isUserline" />
    <result column="password" property="password" />
    <result column="wftp_status" property="wftpStatus" />
    <result column="wftp_path" property="wftpPath" />
    <result column="audit_time" property="auditTime" />
    <result column="other_province" property="otherProvince" />
    <result column="other_city" property="otherCity" />
    <result column="enableaccount" property="enableaccount" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    user_id, user_name, real_name, user_pwd, user_sex, user_email, user_mobile, work_area, 
    work_type, work_unit, work_tel, id_card, application_area, address, fax, country, 
    province, city, status, audit_status, audit_fail_reason, source, founder, 
    to_char(create_time, 'yyyy/MM/dd HH24:mi:ss') create_time,role_id,is_report,is_userline,password,wftp_status,wftp_path,
    to_char(audit_time, 'yyyy/MM/dd HH24:mi:ss') audit_time,other_province,other_city
  </sql>
  <sql id="No_Password_List">
  	user_id, user_name, real_name, user_sex, user_email, user_mobile, work_area, 
    work_type, work_unit, work_tel, id_card, application_area, address, fax, country, 
    province, city, status, audit_status, audit_fail_reason, source, founder, 
    to_char(create_time, 'yyyy/MM/dd HH24:mi:ss') create_time,role_id,is_report,is_userline,password,wftp_status,
    wftp_path,to_char(audit_time, 'yyyy/MM/dd HH24:mi:ss') audit_time,other_province,other_city
  </sql>
  
  <sql id="UserInfo">
  		t1.user_id,
		t1.user_name,
		t1.real_name,
		t1.user_pwd,
		t1.user_sex,
		t1.user_email,
		t1.user_mobile,
		t1.work_area,
		t1.work_type,
		t1.work_unit,
		t1.work_tel,
		t1.id_card,
		t1.application_area,
		t1.address,
		t1.fax,
		t1.country,
		t1.province,
		t1.city,
		t1.status,
		t1.audit_status,
		t1.audit_fail_reason,
		t1.SOURCE,
		t1.founder,
		to_char(
			t1.create_time,
			'yyyy/MM/dd HH24:mi:ss'
		) create_time,
		t1.role_id,
		t1.is_report,
		t1.is_userline,
		t1.PASSWORD,
		t1.wftp_status,
		t1.wftp_path,
		to_char(
			t1.audit_time,
			'yyyy/MM/dd HH24:mi:ss'
		) audit_time,
		t1.other_province,
		t1.other_city,
		t2.enableaccount
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ddss_sys_user
    where user_id = #{userId,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ddss_sys_user
    where user_id = #{userId,jdbcType=NUMERIC}
  </delete>
  <insert id="insert" parameterType="com.sinosoft.ddss.common.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ddss_sys_user (user_id, user_name, real_name, 
      user_pwd, user_sex, user_email, 
      user_mobile, work_area, work_type, 
      work_unit, work_tel, id_card, 
      application_area, address, fax, 
      country, province, city, 
      status, audit_status, audit_fail_reason, 
      source, founder, create_time
      )
    values (#{userId,jdbcType=NUMERIC}, #{userName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{userPwd,jdbcType=VARCHAR}, #{userSex,jdbcType=SMALLINT}, #{userEmail,jdbcType=VARCHAR}, 
      #{userMobile,jdbcType=VARCHAR}, #{workArea,jdbcType=SMALLINT}, #{workType,jdbcType=SMALLINT}, 
      #{workUnit,jdbcType=VARCHAR}, #{workTel,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{applicationArea,jdbcType=SMALLINT}, #{address,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, 
      #{country,jdbcType=INTEGER}, #{province,jdbcType=INTEGER}, #{city,jdbcType=INTEGER}, 
      #{status,jdbcType=SMALLINT}, #{auditStatus,jdbcType=SMALLINT}, #{auditFailReason,jdbcType=VARCHAR}, 
      #{source,jdbcType=SMALLINT}, #{founder,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id ="getUsetSeq" resultType="java.math.BigDecimal">
  	SELECT nextval('ddss_sys_user_seq') as user_id
  </select>
  
  <insert id="insertSelective" parameterType="com.sinosoft.ddss.common.entity.User">
  
<!--     <selectKey resultType="java.math.BigDecimal" order="AFTER" keyProperty="userId"> -->
<!--     	SELECT nextval('ddss_sys_user_seq') as user_id -->
<!--     </selectKey> -->
    insert into ddss_sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
        user_id,
      <if test="userName != null">
        user_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userMobile != null">
        user_mobile,
      </if>
      <if test="workArea != null">
        work_area,
      </if>
      <if test="workType != null">
        work_type,
      </if>
      <if test="workUnit != null">
        work_unit,
      </if>
      <if test="workTel != null">
        work_tel,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="applicationArea != null">
        application_area,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="fax != null">
        fax,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="auditFailReason != null">
        audit_fail_reason,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="founder != null">
        founder,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isReport != null">
        is_report,
      </if>
      <if test="otherProvince != null">
        other_province,
      </if>
      <if test="otherCity != null">
        other_city
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        #{userId},
      <if test="userName != null">
        #{userName},
      </if>
      <if test="realName != null">
        #{realName},
      </if>
      <if test="userPwd != null">
        #{userPwd},
      </if>
      <if test="userSex != null">
        #{userSex},
      </if>
      <if test="userEmail != null">
        #{userEmail},
      </if>
      <if test="userMobile != null">
        #{userMobile},
      </if>
      <if test="workArea != null">
        #{workArea},
      </if>
      <if test="workType != null">
        #{workType},
      </if>
      <if test="workUnit != null">
        #{workUnit},
      </if>
      <if test="workTel != null">
        #{workTel},
      </if>
      <if test="idCard != null">
        #{idCard},
      </if>
      <if test="applicationArea != null">
        #{applicationArea},
      </if>
      <if test="address != null">
        #{address},
      </if>
      <if test="fax != null">
        #{fax},
      </if>
      <if test="country != null">
        #{country},
      </if>
      <if test="province != null">
        #{province},
      </if>
      <if test="city != null">
        #{city},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="auditStatus != null">
        #{auditStatus},
      </if>
      <if test="auditFailReason != null">
        #{auditFailReason},
      </if>
      <if test="source != null">
        #{source},
      </if>
      <if test="founder != null">
        #{founder},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="isReport != null">
        #{isReport}
      </if>
      <if test="otherProvince != null">
         #{otherProvince},
      </if>
      <if test="otherCity != null">
         #{otherCity},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinosoft.ddss.common.entity.User">
    update ddss_sys_user
    <set>
      <if test="realName != null and realName != ''">
        real_name = #{realName},
      </if>
      <if test="userPwd != null and userPwd != ''">
        user_pwd = #{userPwd},
      </if>
      <if test="userSex != null and userSex != ''">
        user_sex = #{userSex},
      </if>
      <if test="userEmail != null and userEmail != ''">
        user_email = #{userEmail},
      </if>
      <if test="userMobile != null and userMobile != ''">
        user_mobile = #{userMobile},
      </if>
      <if test="workArea != null and workArea != ''">
        work_area = #{workArea},
      </if>
      <if test="workType != null and workType != ''">
        work_type = #{workType},
      </if>
      <if test="workUnit != null and workUnit != ''">
        work_unit = #{workUnit},
      </if>
      <if test="workTel != null">
        work_tel = #{workTel},
      </if>
      <if test="idCard != null and idCard != ''">
        id_card = #{idCard},
      </if>
      <if test="applicationArea != null and applicationArea != ''">
        application_area = #{applicationArea},
      </if>
      <if test="address != null and address != ''">
        address = #{address},
      </if>
      <if test="fax != null">
        fax = #{fax},
      </if>
      <if test="country != null and country != ''">
        country = #{country},
      </if>
      <if test="province != null and province != ''">
        province = #{province},
      </if>
      <if test="city != null and city != ''">
        city = #{city},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
      <if test="auditStatus != null and auditStatus != ''">
        audit_status = #{auditStatus},
      </if>
      <if test="auditFailReason != null and auditFailReason != ''">
        audit_fail_reason = #{auditFailReason},
      </if>
      <if test="source != null and source != ''">
        source = #{source},
      </if>
      <if test="founder != null and founder != ''">
        founder = #{founder},
      </if>
      <if test="roleId != null and roleId != ''">
        role_id = #{roleId},
      </if>
      <if test="isReport != null and isReport != ''">
       is_report = #{isReport},
      </if>
      <if test="isUserline != null and isUserline != ''">
       is_userline = #{isUserline},
      </if>
      <if test="password != null and password != ''">
       password = #{password},
      </if>
      <if test="wftpStatus != null and wftpStatus != ''">
      	wftp_status = #{wftpStatus},
      </if>
      <if test="wftpPath != null and wftpPath != ''">
      	wftp_path = #{wftpPath},
      </if>
    </set>
    where user_id = #{userId}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinosoft.ddss.common.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ddss_sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=SMALLINT},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_mobile = #{userMobile,jdbcType=VARCHAR},
      work_area = #{workArea,jdbcType=SMALLINT},
      work_type = #{workType,jdbcType=SMALLINT},
      work_unit = #{workUnit,jdbcType=VARCHAR},
      work_tel = #{workTel,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      application_area = #{applicationArea,jdbcType=SMALLINT},
      address = #{address,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      country = #{country,jdbcType=INTEGER},
      province = #{province,jdbcType=INTEGER},
      city = #{city,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      audit_status = #{auditStatus,jdbcType=SMALLINT},
      audit_fail_reason = #{auditFailReason,jdbcType=VARCHAR},
      source = #{source,jdbcType=SMALLINT},
      founder = #{founder,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=NUMERIC}
  </update>
  <select id="listUser" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.query.UserQuery">
		select
		<include refid="UserInfo" />
		from 
		<choose>
			<when test="auditStatus == 2">
				ddss_sys_user_delete t1,
				wftp_table_user t2
			</when>
			<otherwise>
				ddss_sys_user t1,
				wftp_table_user t2
			</otherwise>
		</choose>
		
	    <trim prefix="WHERE" prefixOverrides="AND | OR">
	    	t1.user_name = t2.user_name 
	    	AND t2.domain = 'Administrator'
	    	<if test="userName != null and userName != ''">
				AND t1.user_name like '%${userName}%'
			</if>
			<if test="realName != null and realName != ''">
				AND t1.real_name=#{realName}
			</if>
			<if test="userEmail != null and userEmail != ''">
				AND t1.user_email like '%${userEmail}%'
			</if>
			<if test="workUnit != null and workUnit != ''">
				AND t1.work_unit like '%${workUnit}%'
			</if>
			<if test="roleId != null and roleId != ''">
				AND t1.role_id = #{roleId}
			</if>
			<if test="auditStatus != null">
				AND t1.audit_status = #{auditStatus}
			</if >
			<if test="status != null">
			    AND t1.status = 2
			</if>
			<if test="status == null and status != ''">
				AND t1.status != 2
			</if>
			<if test="callPoliceTime != null">
				AND t1.create_time &lt;= (SELECT current_timestamp - interval '${callPoliceTime} hour')
				AND t1.audit_status = 0
			</if>
	    </trim>
	    	<choose>
				<when test="sortBy != null and sortBy != ''">
					<if test="sortType == 1">
						ORDER BY t1.create_time ASC
					</if>
					<if test="sortType == 2">
						ORDER BY t1.create_time DESC
					</if>
				</when>
				<otherwise>
					ORDER BY t1.create_time DESC
				</otherwise>
			</choose>
	    <if	test="startNum != null and startNum >= 0 and pageSize != null and pageSize > 0">
			<![CDATA[ limit #{pageSize} offset #{startNum} ]]> 
		</if>
  </select>
  
  
  <!-- 根据用户名和邮箱查询用户 -->
    <select id="selectUserByUserNameEmail" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.query.UserQuery">
		select
		<include refid="Base_Column_List" />
		from ddss_sys_user
	    <trim prefix="WHERE" prefixOverrides="AND | OR">
	    	<if test="userName != null and userName != ''">
				AND user_name = #{userName}
			</if>
			<if test="userEmail != null and userEmail != ''">
				AND user_email = #{userEmail}
			</if>
	    </trim>
  </select>
  
  
  <select id="countUser" parameterType="com.sinosoft.ddss.common.entity.query.UserQuery" resultType="java.lang.Integer">
  	 select 
    count(1)
		
   	from 
		<choose>
			<when test="auditStatus == 2">
				ddss_sys_user_delete
			</when>
			<otherwise>
				ddss_sys_user
			</otherwise>
		</choose>
    <trim prefix="WHERE" prefixOverrides="AND | OR">
    		<if test="userName != null and userName != ''">
				AND user_name like '%${userName}%'
			</if>
			<if test="realName != null and realName != ''">
				AND real_name=#{realName}
			</if>
			<if test="userEmail != null and userEmail != ''">
				AND user_email like '%${userEmail}%'
			</if>
			<if test="workUnit != null and workUnit != ''">
				AND work_unit like '%${workUnit}%'
			</if>
			<if test="roleId != null and roleId != ''">
				AND role_id = #{roleId}
			</if>
			<if test="auditStatus != null">
				AND audit_status = #{auditStatus}
			</if>
				AND status != 2
			<if test="callPoliceTime != null">
				AND create_time &lt;= (SELECT current_timestamp - interval '${callPoliceTime} hour')
				AND audit_status = 0
			</if>
    </trim>
  </select>
  
  <select id="checkUserName" resultMap="BaseResultMap" parameterType="string">
  	select 
    <include refid="Base_Column_List" />
   <!--  from ddss_sys_user where user_name = #{userName} and status != 2 -->
    from ddss_sys_user where user_name = #{userName}
  </select>
  
  <select id="getUserByName" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.User">
  	select 
    <include refid="Base_Column_List" />
    from ddss_sys_user where status = 1 and audit_status = 1 and user_name = #{userName} 
    <!-- and user_pwd = #{userPwd} -->
  </select>
  <update id="deleteUserByIds" parameterType="java.util.List">
  	update ddss_sys_user set status = 2 where 1=1 
	<!--   	delete from ddss_sys_user where user_id in (#{ids}); -->
     and user_id in
      <foreach collection="list"  index="index" item="item" open="(" separator="," close=")"  >
       #{item}
      </foreach>
    ;
   	delete from ddss_sys_user_role where 1=1 and user_id in 
   		<foreach collection="list"  index="index" item="item" open="(" separator="," close=")"  >
       #{item}
      </foreach>
     ;
  </update>
  <update id="updateUserPwd" parameterType="com.sinosoft.ddss.common.entity.User">
  update ddss_sys_user set user_pwd = #{userPwd} where 1=1 and user_id = #{userId}
  </update>
  <select id="getUserById" parameterType="com.sinosoft.ddss.common.entity.User" resultMap="BaseResultMap" >
  	select 
    <include refid="Base_Column_List" />
    from
    <choose>
		<when test="auditStatus == 2">
			ddss_sys_user_delete
		</when>
		<otherwise>
			ddss_sys_user
		</otherwise>
	</choose>
	 where user_id = #{userId}
	 
  </select>
  <update id="updateUserStatusById" parameterType="com.sinosoft.ddss.common.entity.User">
  update ddss_sys_user 
   <set>
      <if test="status != null and status != ''">
        status = #{status},
      </if>
      <if test="auditStatus != null and auditStatus != ''">
        audit_status = #{auditStatus},
      </if>
      <if test="auditFailReason != null and auditFailReason != ''">
        audit_fail_reason = #{auditFailReason},
      </if>
      <if test="founder != null and founder != ''">
        founder = #{founder},
      </if>
        audit_time = now()
    </set>
     where user_id in (${ids})
  </update>
  
  <select id="listlistUserByIds" parameterType="com.sinosoft.ddss.common.entity.User" resultMap="BaseResultMap" >
	SELECT
	dsu.user_id as user_id,
	dsu.user_name as user_name,
	dsu.real_name as real_name,
	dsu.user_sex as user_sex,
	dsr.role_name as role_name,
	dsu.user_email as user_email,
	dsu.work_tel as work_tel,
	dsu.user_mobile as user_mobile,
	dsu.work_unit as work_unit,
	dsu.status as status,
	dsu.audit_fail_reason,
	to_char(
	dsu.create_time,
	'yyyy/MM/dd HH24:mi:ss'
	) create_time
	FROM
	ddss_sys_user dsu LEFT JOIN ddss_sys_role dsr ON dsu.role_id
	= dsr.role_id
	where
	dsu.status != 2
	AND dsu.user_id IN (${ids}) ORDER BY dsu.create_time DESC;
  </select>
  
  
  <select id="QueryCallPolice" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	    SELECT
		user_id
		FROM
			ddss_sys_user
		WHERE
			audit_status = 0
		and 
			status != 2
		AND
			create_time != (SELECT current_timestamp - interval '${_parameter} hour')
  </select>
  <select id="unitListUser" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.query.UserQuery">
		select
		distinct work_unit
		from ddss_sys_user
	    <trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="workUnit != null and workUnit != ''">
				AND work_unit like '${workUnit}%'
			</if>
				AND status != 2
	    </trim>
  </select>
  <select id="userByWorkUnit" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.query.UserQuery">
		select
		user_id,
		user_name,
		work_unit
		from ddss_sys_user
	    <trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="workUnit != null and workUnit != ''">
				AND work_unit in (${ids})
			</if>
				AND status != 2
	    </trim>
  </select>
  <select id="getWorkTypeAndUserInfo" resultType="Map">
 	SELECT
		con.config_value work_type,
		u.user_name,
		u.real_name,
		u.user_email,
		con. ID work_id,
		u.user_id
	FROM
		ddss_sys_user u
	LEFT JOIN ddss_sys_config con ON u.work_type = con. ID
	ORDER BY
		config_value
  </select>
  
  <!-- 根据用户名查询ftp用户 -->
  <select id="selectWftpByUserName" parameterType="String" resultType="Map">
  	SELECT
		*
	FROM
		wftp_table_user
	WHERE
		user_name = #{userName}
  </select>
  
  <!-- 修改wftp用户启用状态 -->
  <update id="updateWftpEnableaccount" parameterType="com.sinosoft.ddss.common.entity.User">
  	UPDATE wftp_table_user
  	<set>
		enableaccount = #{enableaccount},
  	</set>
	WHERE
		user_name = #{userName}
	AND DOMAIN = 'Administrator'
  </update>
  
  <!-- 修改wftp用户目录 -->
  <update id="updateWftpDirpath" parameterType="Map">
  	UPDATE wftp_table_dir
	SET dirpath = #{dirpath}
	WHERE
		user_name = #{userName}
	AND DOMAIN = 'Administrator'
  </update>
</mapper>