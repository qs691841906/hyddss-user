<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosoft.ddss.dao.SysConfigMapper">
  <resultMap id="BaseResultMap" type="com.sinosoft.ddss.common.entity.SysConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id"  property="id" />
    <result column="config_key" property="configKey" />
    <result column="config_value"  property="configValue" />
    <result column="description"  property="description" />
    <result column="status"  property="status" />
    <result column="type" property="type" />
    <result column="founder"  property="founder" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
    <result column="is_delete" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    
    id, config_key, config_value, description, status, type, founder, to_char(create_time, 'yyyy/MM/dd HH24:mi:ss') create_time, to_char(update_time, 'yyyy/MM/dd HH24:mi:ss') update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
   
    select 
    <include refid="Base_Column_List" />
    from ddss_sys_config
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from ddss_sys_config
    where id = #{id,jdbcType=NUMERIC}
  </delete>
  <insert id="insert" parameterType="com.sinosoft.ddss.common.entity.SysConfig">
    
    insert into ddss_sys_config (id, config_key, config_value, 
      description, status, type, 
      founder, create_time, update_time
      )
    values (#{id}, #{configKey}, #{configValue}, 
      #{description}, #{status}, #{type}, 
      #{founder}, #{createTime}, #{updateTime}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sinosoft.ddss.common.entity.SysConfig">
    insert into ddss_sys_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
        id,
      <if test="configKey != null">
        config_key,
      </if>
      <if test="configValue != null">
        config_value,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="founder != null">
        founder,
      </if>
        create_time,
        update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         nextval('ddss_sysconfig_seq'),
      <if test="configKey != null">
        #{configKey},
      </if>
      <if test="configValue != null">
        #{configValue},
      </if>
      <if test="description != null">
        #{description},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="type != null">
        #{type},
      </if>
      <if test="founder != null">
        #{founder},
      </if>
        now(),
        now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinosoft.ddss.common.entity.SysConfig">
    update ddss_sys_config
    <set>
      <if test="configKey != null and configKey != ''">
        config_key = #{configKey},
      </if>
      <if test="configValue != null and configValue != ''">
        config_value = #{configValue},
      </if>
      <if test="description != null and description != ''">
        description = #{description},
      </if>
      <if test="status != null and status != ''">
        status = #{status},
      </if>
      <if test="type != null and type != ''">
        type = #{type},
      </if>
      <if test="founder != null and founder != ''">
        founder = #{founder},
      </if>
       update_time = now(),
    </set>
    where id = #{id}
  </update>
  <update id="updateList" parameterType="java.util.List">
	  <if test="list != null and list.size() > 0">
		<foreach collection="list" item="item" separator=";">
		    update ddss_sys_config
		    <set>
		      <if test="item.configKey != null and item.configKey != ''">
		        config_key = #{item.configKey},
		      </if>
		      <if test="item.configValue != null and item.configValue != ''">
		        config_value = #{item.configValue},
		      </if>
		      <if test="item.description != null and item.description != ''">
		        description = #{item.description},
		      </if>
		      <if test="item.status != null and item.status != ''">
		        status = #{item.status},
		      </if>
		      <if test="item.type != null and item.type != ''">
		        type = #{item.type},
		      </if>
		      <if test="item.founder != null and item.founder != ''">
		        founder = #{item.founder},
		      </if>
		      update_time = now(), 
		    </set>
		    where id = #{item.id}
    	</foreach>
	</if>
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinosoft.ddss.common.entity.SysConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ddss_sys_config
    set config_key = #{configKey},
      config_value = #{configValue},
      description = #{description},
      status = #{status},
      type = #{type},
      founder = #{founder},
      create_time = #{createTime},
      update_time = #{updateTime}
    where id = #{id}
  </update>
  <select id="listSysConfig" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ddss_sys_config ORDER BY config_key
  </select>
  
  <select id="listSysConfigById" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.SysConfig">
    select 
    <include refid="Base_Column_List" />
    from ddss_sys_config where id in (${ids}) ORDER BY config_key
  </select>
  
  <select id="listConfig" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.query.SysConfigQuery">
		select
		<include refid="Base_Column_List" />
		from ddss_sys_config
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		    <if test="configKey != null and configKey != ''">
				AND config_key like '%${configKey}%'
			</if>
			<if test="configValue != null and configValue != ''">
				AND config_value like '%${configValue}%'
			</if>
			<if test="description != null and description != ''">
				AND description like '%${description}%'
			</if>
			<if test="type != null and type != ''">
				AND type = #{type}
			</if>
			<if test="startTime != null and startTime != ''">
				AND to_timestamp(#{startTime}, 'yyyy-mm-dd HH24:mi:ss') &lt;=
				create_time
			</if>
			<if test="endTime != null and endTime != ''">
				AND to_timestamp(#{endTime}, 'yyyy-mm-dd HH24:mi:ss') &gt;=
				create_time
			</if>
			AND is_delete=0
	    </trim>
	    	<choose>
				<when test="sortBy != null and sortBy != ''">
					<if test="sortType == 1">
						ORDER BY create_time ASC
					</if>
					<if test="sortType == 2">
						ORDER BY create_time DESC
					</if>
				</when>
				<otherwise>
					ORDER BY create_time DESC
				</otherwise>
			</choose>
	    <if	test="startNum != null and startNum >= 0 and pageSize != null and pageSize > 0">
			<![CDATA[ limit #{pageSize} offset #{startNum} ]]> 
		</if>
  </select>
  
  <select id="countConfig" parameterType="com.sinosoft.ddss.common.entity.query.SysConfigQuery" resultType="java.lang.Integer">
  	 select 
    count(1)
    from ddss_sys_config
    <trim prefix="WHERE" prefixOverrides="AND | OR">
   		<if test="configKey != null and configKey != ''">
			AND config_key like '%${configKey}%' 
		</if>
		<if test="configValue != null and configValue != ''">
			AND config_value like '%${configValue}%'
		</if>
		<if test="description != null and description != ''">
			AND description like '%${description}%'
		</if>
		<if test="type != null and type != ''">
			AND type = #{type}
			</if>
		<if test="startTime != null and startTime != ''">
			AND to_timestamp(#{startTime}, 'yyyy-mm-dd HH24:mi:ss') &lt;=
			create_time
		</if>
		<if test="endTime != null and endTime != ''">
			AND to_timestamp(#{endTime}, 'yyyy-mm-dd HH24:mi:ss') &gt;=
			create_time
		</if>
		AND is_delete=0
    </trim>
  </select>
  <select id="listConfigByIds" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.SysLog">
	SELECT
	<include refid="Base_Column_List"/>
	FROM
	ddss_sys_config
	WHERE
	ID IN (${ids})
  </select>
  <select id="sysConfigOfSystem" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.query.SysConfigQuery">
		select
		<include refid="Base_Column_List" />
		from ddss_sys_config where type = 0 AND is_delete=0
  </select>
  
  <select id="getCountByKey" resultType="java.lang.Integer">
  	select 
    count(1)
    from ddss_sys_config
    where config_key = #{arg0} AND is_delete=0
  </select>
  <update id="updateByKeySelective" parameterType="com.sinosoft.ddss.common.entity.SysConfig">
    update ddss_sys_config
    <set>
      <if test="configValue != null and configValue != ''">
        config_value = #{configValue},
      </if>
      <if test="description != null and description != ''">
        description = #{description},
      </if>
      <if test="status != null and status != ''">
        status = #{status},
      </if>
      <if test="type != null and type != ''">
        type = #{type},
      </if>
      <if test="founder != null and founder != ''">
        founder = #{founder},
      </if>
      <if test="createTime != null and createTime != ''">
        create_time = to_timestamp(#{createTime}, 'yyyy-mm-dd HH24:mi:ss'),
      </if>
      <if test="updateTime != null and updateTime != ''">
        update_time = to_timestamp(#{updateTime}, 'yyyy-mm-dd HH24:mi:ss'),
      </if>
    </set>
    where config_key = #{configKey}
  </update>
  
  <select id="listSysConfigEmail" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.SysConfig">
    select 
    <include refid="Base_Column_List" />
    from ddss_sys_config where config_key like 'exportEmail%'
  </select>
  
   <select id="selectByKey" parameterType="String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ddss_sys_config
    where config_key = #{configKey}
  </select>
  
  <select id="selectByKeyLevel" resultMap="BaseResultMap" parameterType="com.sinosoft.ddss.common.entity.SysConfig">
    select regexp_split_to_table(config_value,',') config_value from ddss_sys_config WHERE config_key='levelCondition'
  </select>
  
</mapper>